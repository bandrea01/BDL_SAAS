services:
  flask_app:
    build:
      context: ./flask_root
      dockerfile: Dockerfile
    ports:
      - "8432:80"
    environment:
      - DEBUG_USR=<USERNAME>
      - DEBUG_PWD=<PASSWORD>
    volumes:
      - ./flask_root:/app
    networks:
      - general_network

  node_app:
    build:
      context: ./node_root
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - node_app:/app
    networks:
      - general_network

  arangodb:
    image: arangodb:3.11.7
    ports:
      - "8529:8529"
    environment:
      ARANGO_ROOT_PASSWORD: <PASSWORD>
    volumes:
      - arangodb_data:/var/lib/arangodb3
      - arangodb_apps:/var/lib/arangodb3-apps
      - arangodb_backup:/var/lib/arangodb3-backup
    networks:
      - general_network

  orion:
    image: fiware/orion-ld:1.6.0-PRE-1578
    ports:
      - "1026:1026"
    command: -dbhost mongo -logLevel DEBUG
    depends_on:
      - mongo
    healthcheck:
      test: curl --fail -s http://orion:1026/version || exit 1
    networks:
      - general_network

  quantumleap:
    image: orchestracities/quantumleap:1.0.0
    ports:
      - "8668:8668"
    depends_on:
      - mongo
      - orion
      - crate
    environment:
      - CRATE_HOST=${CRATE_HOST:-crate}
      - USE_GEOCODING=True
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOGLEVEL=DEBUG
    networks:
      - general_network

  mongo:
    image: mongo:${MONGO_VERSION:-4.4}
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
      - mongoconfig:/data/configdb
      - mongolog:/var/log/mongodb
    networks:
      - general_network

  crate:
    image: crate:${CRATE_VERSION:-5.6.2}
    command: crate -Cauth.host_based.enabled=false
      -Ccluster.name=democluster -Chttp.cors.enabled=true -Chttp.cors.allow-origin="*"
    environment:
      - LOG4J_FORMAT_MSG_NO_LOOKUPS=true
    ports:
      # Admin UI
      - "4200:4200"
      # Transport protocol
      - "4300:4300"
      - "5432:5432"
    volumes:
      - cratedata:/data
    networks:
      - general_network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - crate
    environment:
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ORG_ROLE=viewer
    volumes:
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
      - grafana_logs:/var/log/grafana
    networks:
      - general_network

  redis:
    image: redis:${REDIS_VERSION:-7.2.4}
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - general_network

  perseo-mongo:
    image: mongo:4.4
    volumes:
      - perseomongodata:/data/db
      - perseomongoconfig:/data/configdb
      - perseomongolog:/var/log/mongodb
    networks:
      - general_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  perseo-core:
    image: fiware/perseo-core:1.13.0
    environment:
      - PERSEO_FE_URL=http://perseo-fe:9090
      - MAX_AGE=6000
    networks:
      - general_network
    depends_on:
      - perseo-mongo
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  perseo-fe:
    image: fiware/perseo:1.26.0
    networks:
      - general_network
    ports:
      - "9090:9090"
    depends_on:
      - perseo-core
    environment:
      - PERSEO_MONGO_ENDPOINT=perseo-mongo
      - PERSEO_CORE_URL=http://perseo-core:8080
      - PERSEO_LOG_LEVEL=debug
      - PERSEO_ORION_URL=http://orion:1026/
      - PERSEO_SMTP_HOST=smtp.gmail.com
      - PERSEO_SMTP_PORT=465
      - PERSEO_SMTP_SECURE=true
      - PERSEO_SMTP_AUTH_USER=perseobdl@gmail.com
      - PERSEO_SMTP_AUTH_PASS=<AUTH-PASS>
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

volumes:
  node_app:
  arangodb_data:
  arangodb_apps:
  arangodb_backup:
  mongodata:
  mongoconfig:
  mongolog:
  perseomongodata:
  perseomongoconfig:
  perseomongolog:
  cratedata:
  redisdata:
  grafana_data:
  grafana_logs:

networks:
  general_network:
